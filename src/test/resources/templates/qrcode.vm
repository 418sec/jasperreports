<div id="element${configuration.element.hashCode()}" style="width: ${configuration.element.width}px; height: ${configuration.element.height}px;" ></div>


${configuration.scripts.require( { "path": "", "name": "jquery", "export": "", "key": "jquery"},
                                 { "path": "scripts/qrcode/qrcode.min.js", "name": "", "export": "", "key": "qrcode"} )}

<script class='jasperreports' type='text/javascript'>
        
        ## This is the main entry point function that transform an instanceData, which contains the 
        ## data to render, to the real chart.
        function renderComponentelement${configuration.element.hashCode()}(instanceData)
        {
            
            var elem = document.getElementById("element" + instanceData.key);
            var qrcode = new QRCode(elem, {
                    width : instanceData.width,
                    height : instanceData.height
            });

            qrcode.makeCode(instanceData.code);
        }


        ## The main function (renderComponentelementXXX) is invoked by requirejs and the component javascript module
        ## automatically. In case the environment is not using requirejs, which is what happens with a standard
        ## export outside jasperreports server or an interactive environment, we need to kick the rendering
        ## process manually by invoking renderComponentelementXXX  
        #if (!${configuration.isInteractiveViewer})
            renderComponentelement${configuration.element.hashCode()}(${configuration.instanceData});
        #end

       
</script>